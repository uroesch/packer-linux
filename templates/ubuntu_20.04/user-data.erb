#cloud-config
autoinstall:
  version: 1
  source:
    id: ubuntu-server-minimal
  identity: 
    hostname: <%= config['code_name'] %>
    password: <%= PasswordFactory.sha512(config['ssh_password']).hashed %>
    realname: ubuntu
    username: <%= config['ssh_username'] %>
  keyboard:
    layout: <%= config['keyboard'] %>
  locale: <%= config['locale'] %>
  refresh-installer:
    update: no
  network:
    ethernets:
      eth0:
        dhcp4: true
        dhcp-identifier: mac
    version: 2
  ssh:
    allow-pw: true
    install-server: true
<%
def calculate_size(size)
  non_lvm   = 1048576 + ((2000 + 500) * 1024 * 1024)
  remainder = (size * 1024 * 1024) - non_lvm 
  "#{remainder}B"
end
%>
<% if config['target'] == 'pcidss' %>
  storage:
    version: 1
    swap:
      size: 0
    config:
    # Label
    - { type: disk, id: disk-0, name: '', path: <%= config['disk_path'] %>, preserve: false, ptable: gpt, wipe: superblock <%= config['firmware'] == 'bios' ? ', grub_device: true' : '' %> }
    # partitioning 
    - { type: partition, device: disk-0, preserve: false, flag: bios_grub,  id: part-biosgrub, number: 1, size: 1M }
    - { type: partition, device: disk-0, preserve: false, flag: '',         id: part-boot,     number: 2, size: 2000M,  wipe: superblock }
    - { type: partition, device: disk-0, preserve: false, flag: boot,       id: part-bootefi,  number: 3, size: 500M,   wipe: superblock <%= config['firmware'] == 'efi' ? ', grub_device: true' : '' %> }
    - { type: partition, device: disk-0, preserve: false, flag: '',         id: part-lvm,      number: 4, size: 69000M, wipe: superblock }
    # LVM VG
    - { devices: [ part-lvm ],  id: vg-<%= config['vg_name'] %>,  name: <%= config['vg_name'] %>, preserve: false, type: lvm_volgroup }
    # LVM LV
    - { type: lvm_partition, volgroup: vg-<%= config['vg_name'] %>, preserve: false, id: lv-root,        name: root,        size: 10000M }
    - { type: lvm_partition, volgroup: vg-<%= config['vg_name'] %>, preserve: false, id: lv-swap,        name: swap,        size: 8000M  }
    - { type: lvm_partition, volgroup: vg-<%= config['vg_name'] %>, preserve: false, id: lv-home,        name: home,        size: 4000M  }
    - { type: lvm_partition, volgroup: vg-<%= config['vg_name'] %>, preserve: false, id: lv-opt,         name: opt,         size: 4000M  }
    - { type: lvm_partition, volgroup: vg-<%= config['vg_name'] %>, preserve: false, id: lv-tmp,         name: tmp,         size: 4000M  }
    - { type: lvm_partition, volgroup: vg-<%= config['vg_name'] %>, preserve: false, id: lv-var,         name: var,         size: 6000M  }
    - { type: lvm_partition, volgroup: vg-<%= config['vg_name'] %>, preserve: false, id: lv-varlog,      name: varlog,      size: 4000M  }
    - { type: lvm_partition, volgroup: vg-<%= config['vg_name'] %>, preserve: false, id: lv-varlogaudit, name: varlogaudit, size: 4000M  }
    - { type: lvm_partition, volgroup: vg-<%= config['vg_name'] %>, preserve: false, id: lv-vartmp,      name: vartmp,      size: 4000M  }
    # FS
    - { type: format, fstype: xfs,   preserve: false, id: format-boot,        volume: part-boot }
    - { type: format, fstype: swap,  preserve: false, id: format-swap,        volume: lv-swap }
    - { type: format, fstype: fat32, preserve: false, id: format-bootefi,     volume: part-bootefi,   label: ESP }
    - { type: format, fstype: xfs,   preserve: false, id: format-root,        volume: lv-root }
    - { type: format, fstype: xfs,   preserve: false, id: format-home,        volume: lv-home }
    - { type: format, fstype: xfs,   preserve: false, id: format-opt,         volume: lv-opt }
    - { type: format, fstype: xfs,   preserve: false, id: format-tmp,         volume: lv-tmp }
    - { type: format, fstype: xfs,   preserve: false, id: format-var,         volume: lv-var }
    - { type: format, fstype: xfs,   preserve: false, id: format-varlog,      volume: lv-varlog }
    - { type: format, fstype: xfs,   preserve: false, id: format-varlogaudit, volume: lv-varlogaudit }
    - { type: format, fstype: xfs,   preserve: false, id: format-vartmp,      volume: lv-vartmp }
    # Mount
    - { type: mount, device: format-root,        id: mount-root,         path: / }
    - { type: mount, device: format-swap,        id: mount-swap,         path: swap }
    - { type: mount, device: format-home,        id: mount-home,         path: /home,        options: nodev }
    - { type: mount, device: format-opt,         id: mount-opt,          path: /opt }
    - { type: mount, device: format-tmp,         id: mount-tmp,          path: /tmp,         options: nodev,nosuid,noexec }
    - { type: mount, device: format-var,         id: mount-var,          path: /var }
    - { type: mount, device: format-varlog,      id: mount-varlog,       path: /var/log }
    - { type: mount, device: format-varlogaudit, id: mount-varlogaudit,  path: /var/log/audit }
    - { type: mount, device: format-vartmp,      id: mount-vartmp,       path: /var/tmp,     options: nodev,nosuid,noexec }
    - { type: mount, device: format-boot,        id: mount-boot,         path: /boot } 
    - { type: mount, device: format-bootefi,     id: mount-bootefi,      path: /boot/efi } 
<% else %>
  storage:
    version: 1
    swap:
      size: 0
    config:
    # Label
    - { type: disk, id: disk-0, name: '', path: <%= config['disk_path'] %>, preserve: false, ptable: gpt, wipe: superblock <%= config['firmware'] == 'bios' ? ', grub_device: true' : '' %> }
    # partitioning 
    - { type: partition, device: disk-0, preserve: false, flag: bios_grub, id: part-biosgrub, number: 1, size: 1M }
    - { type: partition, device: disk-0, preserve: false, flag: '',        id: part-boot,     number: 2, size: 500M,   wipe: superblock }
    - { type: partition, device: disk-0, preserve: false, flag: boot,      id: part-bootefi,  number: 3, size: 500M,   wipe: superblock <%= config['firmware'] == 'efi' ? ', grub_device: true' : '' %> }
    - { type: partition, device: disk-0, preserve: false, flag: '',        id: part-lvm,      number: 4, size: 32000M, wipe: superblock }
    # LVM VG
    - { devices: [ part-lvm ],  id: vg-<%= config['vg_name'] %>,  name: <%= config['vg_name'] %>, preserve: false, type: lvm_volgroup }
    # LVM LV
    - { type: lvm_partition, volgroup: vg-<%= config['vg_name'] %>, preserve: false, id: lv-root,        name: root,        size: 10000M }
    - { type: lvm_partition, volgroup: vg-<%= config['vg_name'] %>, preserve: false, id: lv-swap,        name: swap,        size: 8000M  }
    # FS
    - { type: format, fstype: xfs,   preserve: false, id: format-boot,        volume: part-boot }
    - { type: format, fstype: fat32, preserve: false, id: format-bootefi,     volume: part-bootefi,  label: ESP }
    - { type: format, fstype: xfs,   preserve: false, id: format-root,        volume: lv-root }
    - { type: format, fstype: swap,  preserve: false, id: format-swap,        volume: lv-swap }
    # Mount
    - { type: mount, device: format-root,        id: mount-root,         path: / }
    - { type: mount, device: format-swap,        id: mount-swap,         path: swap }
    - { type: mount, device: format-boot,        id: mount-boot,         path: /boot } 
    - { type: mount, device: format-bootefi,     id: mount-bootefi,      path: /boot/efi } 
<% end %>
  late-commands:
    - "test -b <%= config['disk_path'] %>4 && parted <%= config['disk_path'] %> resizepart 4 100% || :"
    - sed -i 's/^#*\(send dhcp-client-identifier\).*$/\1 = hardware;/' /target/etc/dhcp/dhclient.conf
    - 'sed -i "s/dhcp4: true/&\n      dhcp-identifier: mac/" /target/etc/netplan/00-installer-config.yaml'
    - echo 'ubuntu ALL=(ALL) NOPASSWD:ALL' > /target/etc/sudoers.d/ubuntu
    - sed -ie 's/GRUB_CMDLINE_LINUX=.*/GRUB_CMDLINE_LINUX="net.ifnames=0 biosdevname=0"/' /target/etc/default/grub
    - apt -o RootDir=/target -y autoclean
    - apt -o RootDir=/target -y autoremove
    - "rm -rf /target/var/cache/apt/archives/*.deb"
    - >-
      test -d /sys/firmware/efi && /target/usr/bin/efibootmgr -o
      $(/target/usr/bin/efibootmgr | sed -n '/^Boot[0-9]*\* ubuntu/I{ s/[^0-9]//g; p }') || :
    - curtin in-target -- /usr/sbin/update-grub 

  packages:
    - bc
    - curl
    - wget
    - openssh-server
    - qemu-guest-agent
    - eject
  updates: security

  # grub:
    # reorder_uefi: true
    # reorder_uefi_force_fallback: true  
